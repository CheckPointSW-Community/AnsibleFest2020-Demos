---
- name: Check if host object of attacker already exists
  check_point.mgmt.checkpoint_object_facts:
    object_filter: "attacker-{{ attacker_src_ip}}"
    object_type: host
  register: attacker_host
  when: attacker_src_ip is defined

- name: Create attacker host object if it does not exist
  check_point.mgmt.cp_mgmt_host:
    name: "attacker-{{ attacker_src_ip}}"
    color: red
    ip_address: "{{ attacker_src_ip }}"
    ignore_warnings: true
  when: attacker_src_ip is defined and attacker_host['ansible_facts']['checkpoint_objects']['total']|string == "0"
  notify: Publish and install handler

- name: Check if target host is defined as an object
  check_point.mgmt.checkpoint_object_facts:
    object_filter: "target-{{ target_dst_ip }}"
    object_type: host
  register: target_host
  when: target_dst_ip is defined

- name: Create target host object is it does not exist
  check_point.mgmt.cp_mgmt_host:
    name: "target-{{ target_dst_ip }}"
    color: blue
    ip_address: "{{ target_dst_ip }}"
    ignore_warnings: true
  when: target_dst_ip is defined and target_host['ansible_facts']['checkpoint_objects']['total']|string == "0"
  notify: Publish and install handler

- name: Create access rule to quarantine and deny access from attacker to target
  check_point.mgmt.cp_mgmt_access_rule:
    layer: "{{ policy_name }} Network"
    position: 1
    name: "Quarantine attacker and prevent reconnaissance attack from {{ attacker_src_ip}} to {{ target_dst_ip }}"
    source: "attacker-{{ attacker_src_ip}}"
    destination: "target-{{ target_dst_ip }}"
    action: Drop
    track:
      type: log
  notify: Publish and install handler
  when:  attacker_src_ip is defined and target_dst_ip is defined